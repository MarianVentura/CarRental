@page "/vehiculos/create"
@inject VehiculosService VehiculosService
@inject NavigationManager NavigationManager
@inject ToastService ToastService

<h3 class="text-center mb-4" style="color: #3f88c5;">Registrar Nuevo Vehículo</h3>

<EditForm Model="nuevoVehiculo" OnValidSubmit="CrearVehiculo">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="marca" class="form-label">Marca:</label>
                <InputText id="marca" class="form-control" @bind-Value="nuevoVehiculo.Marca" />
                <ValidationMessage For="@(() => nuevoVehiculo.Marca)" />
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="modelo" class="form-label">Modelo:</label>
                <InputText id="modelo" class="form-control" @bind-Value="nuevoVehiculo.Modelo" />
                <ValidationMessage For="@(() => nuevoVehiculo.Modelo)" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="anio" class="form-label">Año:</label>
                <InputNumber id="anio" class="form-control" @bind-Value="nuevoVehiculo.Año" />
                <ValidationMessage For="@(() => nuevoVehiculo.Año)" />
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label for="categoria" class="form-label">Categoría:</label>
                <InputText id="categoria" class="form-control" @bind-Value="nuevoVehiculo.Categoria" />
                <ValidationMessage For="@(() => nuevoVehiculo.Categoria)" />
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label for="precioPorDia" class="form-label">Precio por Día:</label>
                <InputNumber id="precioPorDia" class="form-control" @bind-Value="nuevoVehiculo.PrecioPorDia" />
                <ValidationMessage For="@(() => nuevoVehiculo.PrecioPorDia)" />
            </div>
        </div>
    </div>

    <div class="form-group mb-4">
        <label for="imagenUrl" class="form-label">URL de Imagen:</label>
        <InputText id="imagenUrl" class="form-control" @bind-Value="nuevoVehiculo.ImagenURL" />
        <ValidationMessage For="@(() => nuevoVehiculo.ImagenURL)" />
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="combustibleId" class="form-label">Combustible:</label>
                <InputNumber id="combustibleId" class="form-control" @bind-Value="nuevoVehiculo.CombustibleId" />
                <ValidationMessage For="@(() => nuevoVehiculo.CombustibleId)" />
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label for="seguroId" class="form-label">Seguro:</label>
                <InputNumber id="seguroId" class="form-control" @bind-Value="nuevoVehiculo.SeguroId" />
                <ValidationMessage For="@(() => nuevoVehiculo.SeguroId)" />
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label for="transmision" class="form-label">Transmisión:</label>
                <InputText id="transmision" class="form-control" @bind-Value="nuevoVehiculo.Transmision" />
                <ValidationMessage For="@(() => nuevoVehiculo.Transmision)" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="puertas" class="form-label">Puertas:</label>
                <InputNumber id="puertas" class="form-control" @bind-Value="nuevoVehiculo.Puertas" />
                <ValidationMessage For="@(() => nuevoVehiculo.Puertas)" />
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="asientos" class="form-label">Asientos:</label>
                <InputNumber id="asientos" class="form-control" @bind-Value="nuevoVehiculo.Asientos" />
                <ValidationMessage For="@(() => nuevoVehiculo.Asientos)" />
            </div>
        </div>
    </div>

    <div class="form-group mb-4">
        <label for="color" class="form-label">Color:</label>
        <InputText id="color" class="form-control" @bind-Value="nuevoVehiculo.Color" />
    </div>

    <div class="form-group mb-4">
        <label for="numeroPlaca" class="form-label">Número de Placa:</label>
        <InputText id="numeroPlaca" class="form-control" @bind-Value="nuevoVehiculo.NumeroPlaca" />
        <ValidationMessage For="@(() => nuevoVehiculo.NumeroPlaca)" />
    </div>

    <div class="form-group mb-4">
        <label for="kilometraje" class="form-label">Kilometraje:</label>
        <InputNumber id="kilometraje" class="form-control" @bind-Value="nuevoVehiculo.Kilometraje" />
    </div>

    <div class="form-group mb-4">
        <label for="observaciones" class="form-label">Observaciones:</label>
        <InputTextArea id="observaciones" class="form-control" @bind-Value="nuevoVehiculo.Observaciones" />
    </div>

    <div class="d-flex justify-content-between">
        <button type="submit" class="btn" style="background-color: #3f88c5; color: white;">Guardar</button>
        <button type="button" class="btn btn-outline-secondary" @onclick="Cancelar">Cancelar</button>
    </div>
</EditForm>

@code {

    private Vehiculos nuevoVehiculo = new Vehiculos
        {
            ImagenURL = string.Empty
        };

    private async Task CrearVehiculo()
    {
        try
        {
            var exito = await VehiculosService.CrearVehiculo(nuevoVehiculo);
            if (exito)
            {
                ToastService.ShowSuccess("Vehículo creado exitosamente.");
                NavigationManager.NavigateTo("/vehiculos");
            }
            else
            {
                ToastService.ShowError("Error al crear el vehículo.");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Error inesperado: {ex.Message}");
        }
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/vehiculos");
    }
}
