@page "/vehiculos"
@using CarRental.Models
@using CarRental.Services
@inject VehiculosService VehiculosService
@inject IJSRuntime jsRuntime

<PageTitle>Gestión de Vehículos</PageTitle>

<h1>Gestión de Vehículos</h1>

@if (vehiculos == null)
{
    <p>Cargando vehículos...</p>
}
else
{
    <div>
        <button class="btn btn-primary" @onclick="MostrarFormularioCrear">Agregar Nuevo Vehículo</button>
    </div>

    @if (!vehiculos.Any())
    {
        <p>No hay vehículos registrados.</p>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Marca</th>
                    <th>Modelo</th>
                    <th>Año</th>
                    <th>Transmisión</th>
                    <th>Combustible</th>
                    <th>Precio por Día</th>
                    <th>Disponible</th>
                    <th>Color</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vehiculo in vehiculos)
                {
                    <tr>
                        <td>@vehiculo.VehiculoId</td>
                        <td>@vehiculo.Marca</td>
                        <td>@vehiculo.Modelo</td>
                        <td>@vehiculo.Año</td>
                        <td>@vehiculo.Transmision</td>
                        <td>@vehiculo.Combustible</td>
                        <td>@vehiculo.PrecioPorDia:C</td>
                        <td>@(vehiculo.Disponible ? "Sí" : "No")</td>
                        <td>@vehiculo.Color</td>
                        <td>
                            <button class="btn btn-warning btn-sm" @onclick="() => EditarVehiculo(vehiculo)">Editar</button>
                            <button class="btn btn-danger btn-sm" @onclick="() => EliminarVehiculo(vehiculo.VehiculoId)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@if (mostrarFormulario)
{
    <div class="mt-4">
        <h3>@((vehiculoSeleccionado == null ? "Crear" : "Editar")) Vehículo</h3>
        <EditForm Model="@vehiculoSeleccionado" OnValidSubmit="GuardarVehiculo">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label>Marca:</label>
                <InputText @bind-Value="vehiculoSeleccionado.Marca" class="form-control" />
            </div>
            <div class="mb-3">
                <label>Modelo:</label>
                <InputText @bind-Value="vehiculoSeleccionado.Modelo" class="form-control" />
            </div>
            <div class="mb-3">
                <label>Año:</label>
                <InputNumber @bind-Value="vehiculoSeleccionado.Año" class="form-control" />
            </div>
            <div class="mb-3">
                <label>Transmisión:</label>
                <InputSelect @bind-Value="vehiculoSeleccionado.Transmision" class="form-control">
                    @foreach (TipoTransmision transmision in Enum.GetValues(typeof(TipoTransmision)))
                    {
                        <option value="@transmision">@transmision</option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <label>Combustible:</label>
                <InputSelect @bind-Value="vehiculoSeleccionado.Combustible" class="form-control">
                    @foreach (TipoCombustible combustible in Enum.GetValues(typeof(TipoCombustible)))
                    {
                        <option value="@combustible">@combustible</option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <label>Precio por Día:</label>
                <InputNumber @bind-Value="vehiculoSeleccionado.PrecioPorDia" class="form-control" />
            </div>
            <div class="mb-3">
                <label>Disponible:</label>
                <InputCheckbox @bind-Value="vehiculoSeleccionado.Disponible" class="form-check-input" />
            </div>
            <div class="mb-3">
                <label>Color:</label>
                <InputText @bind-Value="vehiculoSeleccionado.Color" class="form-control" />
            </div>
            <div class="mb-3">
                <label>Imagen URL:</label>
                <InputText @bind-Value="vehiculoSeleccionado.Imagen" class="form-control" />
            </div>
            <button type="submit" class="btn btn-success">Guardar</button>
            <button type="button" class="btn btn-secondary" @onclick="CancelarFormulario">Cancelar</button>
        </EditForm>
    </div>
}

@code {
    private List<Vehiculo>? vehiculos;
    private Vehiculo? vehiculoSeleccionado;
    private bool mostrarFormulario = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarVehiculos();
    }

    private async Task CargarVehiculos()
    {
        vehiculos = await VehiculosService.ListaVehiculos();
    }

    private void MostrarFormularioCrear()
    {
        vehiculoSeleccionado = new Vehiculo();
        mostrarFormulario = true;
    }

    private void EditarVehiculo(Vehiculo vehiculo)
    {
        vehiculoSeleccionado = vehiculo;
        mostrarFormulario = true;
    }

    private async Task GuardarVehiculo()
    {
        if (vehiculoSeleccionado is null) return;

        bool exito;
        if (vehiculoSeleccionado.VehiculoId == 0)
        {
            exito = await VehiculosService.AgregarVehiculo(vehiculoSeleccionado);
        }
        else
        {
            exito = await VehiculosService.ActualizarVehiculo(vehiculoSeleccionado);
        }

        if (exito)
        {
            mostrarFormulario = false;
            await CargarVehiculos();
        }
    }

    private async Task EliminarVehiculo(int id)
    {
        bool confirm = await jsRuntime.InvokeAsync<bool>("confirm", $"¿Estás seguro de que deseas eliminar el vehículo con ID {id}?");
        if (confirm)
        {
            bool exito = await VehiculosService.EliminarVehiculo(id);
            if (exito)
            {
                await CargarVehiculos();
            }
        }
    }

    private void CancelarFormulario()
    {
        vehiculoSeleccionado = null;
        mostrarFormulario = false;
    }
}
