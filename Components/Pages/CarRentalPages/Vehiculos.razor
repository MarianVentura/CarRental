@* @page "/vehiculos"
@inject VehiculosService VehiculosService

<h3>Catálogo de Vehículos</h3>

<div class="vehiculos-catalogo">
    @if (vehiculos == null)
    {
        <p>Cargando vehículos...</p>
    }
    else
    {
        <div class="row">
            @foreach (var vehiculo in vehiculos)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <img src="@vehiculo.ImagenURL" class="card-img-top" alt="Imagen de @vehiculo.Nombre" />
                        <div class="card-body">
                            <h5 class="card-title">@vehiculo.Nombre (@vehiculo.Modelo, @vehiculo.Categoria)</h5>
                            <p class="card-text">
                                <strong>Marca:</strong> @vehiculo.Marca <br />
                                <strong>Año:</strong> @vehiculo.Modelo <br />
                                <strong>Precio por día:</strong> @String.Format("{0:C}", vehiculo.PrecioPorDia) <br />
                                <strong>Historial de Mantenimiento:</strong> @vehiculo.HistorialMantenimiento
                            </p>
                            <a href="#" class="btn btn-primary" @onclick="() => VerDetalles(vehiculo.VehiculosId)">Ver detalles</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Vehiculos> vehiculos;

    // Cargar la lista de vehículos cuando se inicializa el componente
    protected override async Task OnInitializedAsync()
    {
        vehiculos = await VehiculosService.ObtenerVehiculosAsync();
    }

    // Método para manejar la acción de "Ver detalles"
    private void VerDetalles(int vehiculoId)
    {
        // Aquí podrías navegar a una página de detalles o mostrar más información en el mismo componente
        NavigationManager.NavigateTo($"/vehiculos/{vehiculoId}");
    }
}
 *@