@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using CarRental.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject UserManager<ApplicationUser> UserManager

<PageTitle>Iniciar sesión</PageTitle>

<EditForm Model="Input" Method="Post" OnValidSubmit="LoginUser" FormName="login" class="container">
    <DataAnnotationsValidator />

    <div class="login-box">
        <div class="login-image"></div>
        <div class="login-form">
            <h1>¡Bienvenido de nuevo!</h1>
            <p>Inicia sesión en tu cuenta</p>

            <section>
                <StatusMessage Message="@errorMessage" />

                <div class="login-input">
                    <label for="role">Seleccionar rol</label>
                    <select id="role" class="form-control" @bind="Input.Role">
                        <option value="">Seleccionar rol</option>
                        <option value="Admin">Administrador</option>
                        <option value="Cliente">Cliente</option>
                    </select>
                    <ValidationMessage For="() => Input.Role" class="text-danger" />
                </div>

                <div class="login-input">
                    <label for="email">Correo electrónico</label>
                    <InputText id="email" @bind-Value="Input.Email" class="form-control" autocomplete="username" placeholder="Correo electrónico" />
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>

                <div class="login-input">
                    <label for="password">Contraseña</label>
                    <InputText id="password" type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" placeholder="Contraseña" />
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>

                <div class="login-options">
                    <a href="Account/ForgotPassword">¿Olvidaste tu contraseña?</a>
                    <a href="Account/Register">Crear una nueva cuenta</a>
                </div>

                <button type="submit" class="login-button">Iniciar sesión</button>
            </section>
        </div>
    </div>
</EditForm>

@code {
    private string? errorMessage;
    private EditForm? loginForm;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        if (string.IsNullOrEmpty(Input.Role))
        {
            errorMessage = "Por favor, selecciona un rol.";
            return;
        }

        var user = await UserManager.FindByEmailAsync(Input.Email);

        if (user != null)
        {
            // Verifica si el usuario tiene el rol correspondiente
            var roles = await UserManager.GetRolesAsync(user);

            if ((Input.Role == "Admin" && roles.Contains("Admin")) ||
                (Input.Role == "Cliente" && roles.Contains("Cliente")))
            {
                var result = await SignInManager.PasswordSignInAsync(user, Input.Password, false, false);

                if (result.Succeeded)
                {
                    // Redirige según el rol seleccionado
                    switch (Input.Role)
                    {
                        case "Admin":
                            NavigationManager.NavigateTo("/Index/Admin");
                            break;
                        case "Cliente":
                            NavigationManager.NavigateTo("/Index/Clientes");
                            break;
                    }
                }
                else
                {
                    errorMessage = "Error de inicio de sesión. Por favor verifica tu correo y contraseña.";
                }
            }
            else
            {
                errorMessage = "Rol incorrecto para este usuario.";
            }
        }
        else
        {
            errorMessage = "El correo electrónico no está registrado.";
        }
    }

    public class InputModel
    {
        [Required(ErrorMessage = "Por favor, selecciona un rol.")]
        public string? Role { get; set; }
        [Required(ErrorMessage = "El correo es obligatorio.")]
        public string? Email { get; set; }
        [Required(ErrorMessage = "La contraseña es obligatoria.")]
        public string? Password { get; set; }
    }

}


<style>
    :root {
        --primary-color: #1c3144;
        --secondary-color: #d00000;
        --accent-color: #ffba08;
        --light-gray: #a2aebb;
        --blue-light: #3f88c5;
        --background-color: #cbf3f0;
        --text-color: #1c3144;
        --white: #ffffff;
    }

    /* Estilo para el contenedor del login */
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background: linear-gradient(to right, var(--background-color), var(--white));
        padding: 20px;
    }

    /* Diseño de la caja de login */
    .login-box {
        display: flex;
        flex-wrap: wrap;
        width: 100%;
        max-width: 900px;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        background-color: var(--white);
    }

    /* Imagen de la derecha */
    .login-image {
        flex: 1;
        background: url('https://urlshort.app/CDE4D4') no-repeat center center;
        background-size: cover;
        border-radius: 15px 0 0 15px;
    }

    /* Contenedor del formulario de login */
    .login-form {
        flex: 1;
        padding: 40px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        background-color: var(--white);
    }

        /* Estilo del título */
        .login-form h1 {
            color: var(--text-color);
            font-size: 2rem;
            margin-bottom: 20px;
            text-align: center;
        }

    /* Estilo de los campos del formulario */
    .login-input {
        margin-bottom: 20px;
        position: relative;
    }

        .login-input input,
        .login-input select {
            width: 100%;
            padding: 12px;
            border-radius: 8px;
            border: 1px solid #ccc;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: #f8f8f8;
        }

            /* Efecto al poner foco */
            .login-input input:focus,
            .login-input select:focus {
                border-color: var(--primary-color);
                outline: none;
                background-color: #fff;
            }

        .login-input label {
            position: absolute;
            top: -10px;
            left: 10px;
            font-size: 14px;
            color: var(--text-color);
            background-color: var(--white);
            padding: 0 5px;
        }

    /* Botón de login */
    .login-button {
        padding: 12px;
        background-color: var(--primary-color);
        color: var(--white);
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        /* Hover effect del botón */
        .login-button:hover {
            background-color: var(--accent-color);
        }

    /* Enlaces */
    .login-options {
        text-align: center;
        margin-top: 15px;
    }

        .login-options a {
            color: var(--secondary-color);
            font-size: 14px;
            text-decoration: none;
        }

            .login-options a:hover {
                text-decoration: underline;
            }

    /* Responsive design */
    media (max-width: 768px) {
        .login-box

    {
        flex-direction: column;
    }

    .login-image {
        display: none;
    }

    }

    /* Mensajes de error */
    .error-message {
        color: red;
        text-align: center;
        margin-top: 20px;
    }

    .login-options {
        text-align: center;
        margin-top: 15px;
    }

    .login-option-link {
        color: var(--secondary-color);
        font-size: 14px;
        text-decoration: none;
        margin-right: 15px; /* Agrega un margen entre los enlaces */
    }

        .login-option-link:hover {
            text-decoration: underline;
        }
</style>
